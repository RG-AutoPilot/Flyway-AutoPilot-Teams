# This is a basic workflow to help you get started with Actions
 
name: Base-Workflow
 
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "release" branch
  #push:
    #branches:
      #- release
      #- 'migrations/**'
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
   inputs:
       CherryPick:
         description: 'CherryPick Scripts to Deploy'     
         required: true
         default: '0'
 
env:
 
  # Enable this for additional debug logging
  ACTIONS_RUNNER_DEBUG: true 
 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Deploy Build
    # The type of runner that the job will run on
    runs-on: self-hosted
    environment: 'build' #Ensure this environment name is setup in the projects Settings>Environment area. Ensuring any reviewers are also configured 
    env:
      stage: 'Build'
      
      # Environment Secrets - In Real Ensure all of the below have been created as an Environment Secret (Projects Settings > Secrets > Actions section, specially related to the environment in question) #
      databaseName: "HUXSNOWFLAKE_BUILD"
      JDBC: "jdbc:snowflake://rv88946.west-europe.azure.snowflakecomputing.com/?db=HUXSNOWFLAKE_PROD&warehouse=COMPUTE_WH&jdbc_query_result_format=json" 
      displayName: 'Build'
      executeBuild: true
      publishArtifacts: true
 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Runs the Flyway Clean command against the Build database
      - name: Clean Build DB
        if: env.executeBuild == 'true'
        run: |
          flyway -baselineOnMigrate="true" -user="HUXLEYKENDELL" -password="${{ secrets.PASSWORD }}" -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" -configFiles="filesystem:${{ GITHUB.WORKSPACE }}\flyway.toml" -locations="filesystem:${{ GITHUB.WORKSPACE }}\migrations" info clean info -environment="build" -cleanDisabled='false' -X
        
      # Runs the Flyway Migrate command against the Build database
      - name: Migrate Build DB
        if: env.executeBuild == 'true'
        run: |
          flyway -baselineOnMigrate="true" -user="HUXLEYKENDELL" -password="${{ secrets.PASSWORD }}" -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" -configFiles="filesystem:${{ GITHUB.WORKSPACE }}\flyway.toml" -locations="filesystem:${{ GITHUB.WORKSPACE }}\migrations" info migrate info -environment="build" -cleanDisabled='false' -X
          

  prod:
    name: Deploy Production
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: Build
    environment: 'prod' #Ensure this environment name is setup in the projects Settings>Environment area. Ensuring any reviewers are also configured 
    if: ${{ true }} #Set this variable to false to temporarily disable the job
    env:
      stage: 'Prod'
      databaseName: "HUXSNOWFLAKE_PROD"
      JDBC: "jdbc:snowflake://rv88946.west-europe.azure.snowflakecomputing.com/?db=HUXSNOWFLAKE_PROD&jdbc_query_result_format=json" 
      pauseForCodeReview: true
 
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        
      # Runs the Flyway Migrate against the Production database
      - name: Migrate Build DB
        if: ${{ true }}
        run: |
          flyway -baselineOnMigrate="true" -user="HUXLEYKENDELL" -password="${{ secrets.PASSWORD }}" -licenseKey="${{ secrets.FLYWAY_LICENSE_KEY }}" -configFiles="filesystem:${{ GITHUB.WORKSPACE }}\flyway.toml" -locations="filesystem:${{ GITHUB.WORKSPACE }}\migrations" info migrate info -cherryPick="${{ github.event.inputs.cherryPick }}" -environment="prod" -cleanDisabled='false' -X
